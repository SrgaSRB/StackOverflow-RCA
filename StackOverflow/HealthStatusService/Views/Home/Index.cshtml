@model HealthStatusService.Models.HealthStatusViewModel
@{
    ViewData["Title"] = "StackOverflow Service Health Status";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">StackOverflow Service Health Status</h1>
            
            <!-- Summary Cards -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card text-white bg-success">
                        <div class="card-header">
                            <h5 class="card-title">Availability</h5>
                        </div>
                        <div class="card-body">
                            <h2 class="card-text">@Model.AvailabilityPercentage.ToString("F2")%</h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-danger">
                        <div class="card-header">
                            <h5 class="card-title">Unavailability</h5>
                        </div>
                        <div class="card-body">
                            <h2 class="card-text">@Model.UnavailabilityPercentage.ToString("F2")%</h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-info">
                        <div class="card-header">
                            <h5 class="card-title">Successful Checks</h5>
                        </div>
                        <div class="card-body">
                            <h2 class="card-text">@Model.SuccessfulChecks / @Model.TotalChecks</h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-warning">
                        <div class="card-header">
                            <h5 class="card-title">Failed Checks</h5>
                        </div>
                        <div class="card-body">
                            <h2 class="card-text">@Model.FailedChecks</h2>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Time Range -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="alert alert-info">
                        <strong>Time Range:</strong> @Model.FromTime.ToString("yyyy-MM-dd HH:mm:ss") - @Model.ToTime.ToString("yyyy-MM-dd HH:mm:ss") (Last 3 hours)
                    </div>
                </div>
            </div>

            <!-- Chart -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5>Hourly Availability Chart</h5>
                        </div>
                        <div class="card-body">
                            <canvas id="availabilityChart" width="400" height="100"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Hourly Data Table -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5>Hourly Status Summary</h5>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Hour</th>
                                            <th>Total Checks</th>
                                            <th>Successful</th>
                                            <th>Failed</th>
                                            <th>Availability %</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var hourData in Model.HourlyData)
                                        {
                                            <tr>
                                                <td>@hourData.Hour.ToString("yyyy-MM-dd HH:mm")</td>
                                                <td>@hourData.TotalChecks</td>
                                                <td><span class="badge bg-success">@hourData.SuccessfulChecks</span></td>
                                                <td><span class="badge bg-danger">@hourData.FailedChecks</span></td>
                                                <td>@hourData.AvailabilityPercentage.ToString("F2")%</td>
                                                <td>
                                                    <span class="badge @(hourData.Status == "OK" ? "bg-success" : "bg-warning")">
                                                        @hourData.Status
                                                    </span>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Detailed Health Checks -->
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5>Recent Health Checks</h5>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Timestamp</th>
                                            <th>Service</th>
                                            <th>Status</th>
                                            <th>Response Time (ms)</th>
                                            <th>Error Message</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var check in Model.HealthChecks.OrderByDescending(h => h.DateTime).Take(50))
                                        {
                                            <tr class="@(check.Status == "OK" ? "table-success" : "table-danger")">
                                                <td>@check.DateTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                                <td>@check.ServiceName</td>
                                                <td>
                                                    <span class="badge @(check.Status == "OK" ? "bg-success" : "bg-danger")">
                                                        @check.Status
                                                    </span>
                                                </td>
                                                <td>@check.ResponseTimeMs</td>
                                                <td>@(check.ErrorMessage ?? "-")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Auto-refresh every 30 seconds -->
<script>
    setTimeout(function() {
        location.reload();
    }, 30000);
</script>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Initialize chart
        const ctx = document.getElementById('availabilityChart').getContext('2d');
        
        const chartData = {
            labels: [@Html.Raw(string.Join(",", Model.HourlyData.Select(h => $"'{h.Hour:HH:mm}'")))],
            datasets: [{
                label: 'Availability %',
                data: [@Html.Raw(string.Join(",", Model.HourlyData.Select(h => h.AvailabilityPercentage.ToString("F2", System.Globalization.CultureInfo.InvariantCulture))))],
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 2,
                fill: true
            }]
        };

        const config = {
            type: 'line',
            data: chartData,
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 100,
                        ticks: {
                            callback: function(value) {
                                return value + '%';
                            }
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    },
                    title: {
                        display: true,
                        text: 'Service Availability Over Time'
                    }
                }
            }
        };

        new Chart(ctx, config);
    </script>
}
